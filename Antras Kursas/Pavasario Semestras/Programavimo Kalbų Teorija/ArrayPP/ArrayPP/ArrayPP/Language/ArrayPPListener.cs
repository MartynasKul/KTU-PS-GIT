//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/HP/RiderProjects/ArrayPP/ArrayPP/ArrayPP/Language\ArrayPP.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ArrayPPParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface IArrayPPListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ArrayPPParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ArrayPPParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] ArrayPPParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] ArrayPPParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] ArrayPPParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] ArrayPPParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] ArrayPPParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] ArrayPPParser.IfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfBlock([NotNull] ArrayPPParser.ElseIfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfBlock([NotNull] ArrayPPParser.ElseIfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] ArrayPPParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] ArrayPPParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] ArrayPPParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] ArrayPPParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] ArrayPPParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] ArrayPPParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAssignment([NotNull] ArrayPPParser.ArrayAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAssignment([NotNull] ArrayPPParser.ArrayAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayRemoval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayRemoval([NotNull] ArrayPPParser.ArrayRemovalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayRemoval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayRemoval([NotNull] ArrayPPParser.ArrayRemovalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayInsert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayInsert([NotNull] ArrayPPParser.ArrayInsertContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayInsert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayInsert([NotNull] ArrayPPParser.ArrayInsertContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLength([NotNull] ArrayPPParser.ArrayLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLength([NotNull] ArrayPPParser.ArrayLengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayRandomiser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayRandomiser([NotNull] ArrayPPParser.ArrayRandomiserContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayRandomiser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayRandomiser([NotNull] ArrayPPParser.ArrayRandomiserContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayFill"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayFill([NotNull] ArrayPPParser.ArrayFillContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayFill"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayFill([NotNull] ArrayPPParser.ArrayFillContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayFilter([NotNull] ArrayPPParser.ArrayFilterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayFilter([NotNull] ArrayPPParser.ArrayFilterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayUnique"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayUnique([NotNull] ArrayPPParser.ArrayUniqueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayUnique"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayUnique([NotNull] ArrayPPParser.ArrayUniqueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arraySlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArraySlice([NotNull] ArrayPPParser.ArraySliceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arraySlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArraySlice([NotNull] ArrayPPParser.ArraySliceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] ArrayPPParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] ArrayPPParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.forCycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForCycle([NotNull] ArrayPPParser.ForCycleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.forCycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForCycle([NotNull] ArrayPPParser.ForCycleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.whileCycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileCycle([NotNull] ArrayPPParser.WhileCycleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.whileCycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileCycle([NotNull] ArrayPPParser.WhileCycleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] ArrayPPParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] ArrayPPParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn([NotNull] ArrayPPParser.ReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn([NotNull] ArrayPPParser.ReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.printToScreen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintToScreen([NotNull] ArrayPPParser.PrintToScreenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.printToScreen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintToScreen([NotNull] ArrayPPParser.PrintToScreenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.readFromFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadFromFile([NotNull] ArrayPPParser.ReadFromFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.readFromFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadFromFile([NotNull] ArrayPPParser.ReadFromFileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.substring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstring([NotNull] ArrayPPParser.SubstringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.substring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstring([NotNull] ArrayPPParser.SubstringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.split"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSplit([NotNull] ArrayPPParser.SplitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.split"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSplit([NotNull] ArrayPPParser.SplitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayExpression([NotNull] ArrayPPParser.ArrayExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayExpression([NotNull] ArrayPPParser.ArrayExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpression([NotNull] ArrayPPParser.ConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpression([NotNull] ArrayPPParser.ConstantExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExpression([NotNull] ArrayPPParser.BoolExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExpression([NotNull] ArrayPPParser.BoolExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExpression([NotNull] ArrayPPParser.IdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExpression([NotNull] ArrayPPParser.IdentifierExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenExpression([NotNull] ArrayPPParser.ParenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenExpression([NotNull] ArrayPPParser.ParenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lengthExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLengthExpression([NotNull] ArrayPPParser.LengthExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lengthExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLengthExpression([NotNull] ArrayPPParser.LengthExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>compareExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareExpression([NotNull] ArrayPPParser.CompareExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compareExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareExpression([NotNull] ArrayPPParser.CompareExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>uniqueExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniqueExpression([NotNull] ArrayPPParser.UniqueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>uniqueExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniqueExpression([NotNull] ArrayPPParser.UniqueExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpression([NotNull] ArrayPPParser.AddExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpression([NotNull] ArrayPPParser.AddExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>splitExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSplitExpression([NotNull] ArrayPPParser.SplitExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>splitExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSplitExpression([NotNull] ArrayPPParser.SplitExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallExpression([NotNull] ArrayPPParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallExpression([NotNull] ArrayPPParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultExpression([NotNull] ArrayPPParser.MultExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultExpression([NotNull] ArrayPPParser.MultExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>indexAccessExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexAccessExpression([NotNull] ArrayPPParser.IndexAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>indexAccessExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexAccessExpression([NotNull] ArrayPPParser.IndexAccessExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>readFromFileExprission</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadFromFileExprission([NotNull] ArrayPPParser.ReadFromFileExprissionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>readFromFileExprission</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadFromFileExprission([NotNull] ArrayPPParser.ReadFromFileExprissionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>substringExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstringExpression([NotNull] ArrayPPParser.SubstringExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>substringExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstringExpression([NotNull] ArrayPPParser.SubstringExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultOp([NotNull] ArrayPPParser.MultOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultOp([NotNull] ArrayPPParser.MultOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddOp([NotNull] ArrayPPParser.AddOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddOp([NotNull] ArrayPPParser.AddOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareOp([NotNull] ArrayPPParser.CompareOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareOp([NotNull] ArrayPPParser.CompareOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolOp([NotNull] ArrayPPParser.BoolOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolOp([NotNull] ArrayPPParser.BoolOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] ArrayPPParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] ArrayPPParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] ArrayPPParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] ArrayPPParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.indexAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexAccess([NotNull] ArrayPPParser.IndexAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.indexAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexAccess([NotNull] ArrayPPParser.IndexAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveType([NotNull] ArrayPPParser.PrimitiveTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveType([NotNull] ArrayPPParser.PrimitiveTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] ArrayPPParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] ArrayPPParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>integerConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerConstant([NotNull] ArrayPPParser.IntegerConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>integerConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerConstant([NotNull] ArrayPPParser.IntegerConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>floatConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatConstant([NotNull] ArrayPPParser.FloatConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>floatConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatConstant([NotNull] ArrayPPParser.FloatConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringConstant([NotNull] ArrayPPParser.StringConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringConstant([NotNull] ArrayPPParser.StringConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolConstant([NotNull] ArrayPPParser.BoolConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolConstant([NotNull] ArrayPPParser.BoolConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>charConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharConstant([NotNull] ArrayPPParser.CharConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>charConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharConstant([NotNull] ArrayPPParser.CharConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nullConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullConstant([NotNull] ArrayPPParser.NullConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nullConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullConstant([NotNull] ArrayPPParser.NullConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] ArrayPPParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] ArrayPPParser.BlockContext context);
}
