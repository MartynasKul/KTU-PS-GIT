//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/HP/RiderProjects/ArrayPP/ArrayPP/ArrayPP/Language\ArrayPP.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IArrayPPListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ArrayPPBaseListener : IArrayPPListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] ArrayPPParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] ArrayPPParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] ArrayPPParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] ArrayPPParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] ArrayPPParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] ArrayPPParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlock([NotNull] ArrayPPParser.IfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlock([NotNull] ArrayPPParser.IfBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfBlock([NotNull] ArrayPPParser.ElseIfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfBlock([NotNull] ArrayPPParser.ElseIfBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] ArrayPPParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] ArrayPPParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] ArrayPPParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] ArrayPPParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] ArrayPPParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] ArrayPPParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAssignment([NotNull] ArrayPPParser.ArrayAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAssignment([NotNull] ArrayPPParser.ArrayAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayRemoval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayRemoval([NotNull] ArrayPPParser.ArrayRemovalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayRemoval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayRemoval([NotNull] ArrayPPParser.ArrayRemovalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayInsert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayInsert([NotNull] ArrayPPParser.ArrayInsertContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayInsert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayInsert([NotNull] ArrayPPParser.ArrayInsertContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLength([NotNull] ArrayPPParser.ArrayLengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLength([NotNull] ArrayPPParser.ArrayLengthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayRandomiser"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayRandomiser([NotNull] ArrayPPParser.ArrayRandomiserContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayRandomiser"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayRandomiser([NotNull] ArrayPPParser.ArrayRandomiserContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayFill"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayFill([NotNull] ArrayPPParser.ArrayFillContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayFill"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayFill([NotNull] ArrayPPParser.ArrayFillContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayFilter([NotNull] ArrayPPParser.ArrayFilterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayFilter([NotNull] ArrayPPParser.ArrayFilterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayUnique"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayUnique([NotNull] ArrayPPParser.ArrayUniqueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayUnique"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayUnique([NotNull] ArrayPPParser.ArrayUniqueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arraySlice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArraySlice([NotNull] ArrayPPParser.ArraySliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arraySlice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArraySlice([NotNull] ArrayPPParser.ArraySliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] ArrayPPParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] ArrayPPParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.forCycle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForCycle([NotNull] ArrayPPParser.ForCycleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.forCycle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForCycle([NotNull] ArrayPPParser.ForCycleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.whileCycle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileCycle([NotNull] ArrayPPParser.WhileCycleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.whileCycle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileCycle([NotNull] ArrayPPParser.WhileCycleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] ArrayPPParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] ArrayPPParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn([NotNull] ArrayPPParser.ReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn([NotNull] ArrayPPParser.ReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.printToScreen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintToScreen([NotNull] ArrayPPParser.PrintToScreenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.printToScreen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintToScreen([NotNull] ArrayPPParser.PrintToScreenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.readFromFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadFromFile([NotNull] ArrayPPParser.ReadFromFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.readFromFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadFromFile([NotNull] ArrayPPParser.ReadFromFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.substring"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubstring([NotNull] ArrayPPParser.SubstringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.substring"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubstring([NotNull] ArrayPPParser.SubstringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.split"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSplit([NotNull] ArrayPPParser.SplitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.split"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSplit([NotNull] ArrayPPParser.SplitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayExpression([NotNull] ArrayPPParser.ArrayExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayExpression([NotNull] ArrayPPParser.ArrayExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] ArrayPPParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] ArrayPPParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExpression([NotNull] ArrayPPParser.BoolExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExpression([NotNull] ArrayPPParser.BoolExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] ArrayPPParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] ArrayPPParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenExpression([NotNull] ArrayPPParser.ParenExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenExpression([NotNull] ArrayPPParser.ParenExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lengthExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLengthExpression([NotNull] ArrayPPParser.LengthExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lengthExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLengthExpression([NotNull] ArrayPPParser.LengthExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>compareExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareExpression([NotNull] ArrayPPParser.CompareExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>compareExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareExpression([NotNull] ArrayPPParser.CompareExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>uniqueExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniqueExpression([NotNull] ArrayPPParser.UniqueExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>uniqueExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniqueExpression([NotNull] ArrayPPParser.UniqueExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpression([NotNull] ArrayPPParser.AddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpression([NotNull] ArrayPPParser.AddExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>splitExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSplitExpression([NotNull] ArrayPPParser.SplitExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>splitExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSplitExpression([NotNull] ArrayPPParser.SplitExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] ArrayPPParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] ArrayPPParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultExpression([NotNull] ArrayPPParser.MultExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultExpression([NotNull] ArrayPPParser.MultExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>indexAccessExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexAccessExpression([NotNull] ArrayPPParser.IndexAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>indexAccessExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexAccessExpression([NotNull] ArrayPPParser.IndexAccessExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>readFromFileExprission</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadFromFileExprission([NotNull] ArrayPPParser.ReadFromFileExprissionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>readFromFileExprission</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadFromFileExprission([NotNull] ArrayPPParser.ReadFromFileExprissionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>substringExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubstringExpression([NotNull] ArrayPPParser.SubstringExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>substringExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubstringExpression([NotNull] ArrayPPParser.SubstringExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOp([NotNull] ArrayPPParser.MultOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOp([NotNull] ArrayPPParser.MultOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOp([NotNull] ArrayPPParser.AddOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOp([NotNull] ArrayPPParser.AddOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOp([NotNull] ArrayPPParser.CompareOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOp([NotNull] ArrayPPParser.CompareOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.boolOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolOp([NotNull] ArrayPPParser.BoolOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.boolOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolOp([NotNull] ArrayPPParser.BoolOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteral([NotNull] ArrayPPParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteral([NotNull] ArrayPPParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] ArrayPPParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] ArrayPPParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.indexAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexAccess([NotNull] ArrayPPParser.IndexAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.indexAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexAccess([NotNull] ArrayPPParser.IndexAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveType([NotNull] ArrayPPParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveType([NotNull] ArrayPPParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] ArrayPPParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] ArrayPPParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>integerConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerConstant([NotNull] ArrayPPParser.IntegerConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>integerConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerConstant([NotNull] ArrayPPParser.IntegerConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>floatConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatConstant([NotNull] ArrayPPParser.FloatConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatConstant([NotNull] ArrayPPParser.FloatConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringConstant([NotNull] ArrayPPParser.StringConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringConstant([NotNull] ArrayPPParser.StringConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolConstant([NotNull] ArrayPPParser.BoolConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolConstant([NotNull] ArrayPPParser.BoolConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>charConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharConstant([NotNull] ArrayPPParser.CharConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>charConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharConstant([NotNull] ArrayPPParser.CharConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nullConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullConstant([NotNull] ArrayPPParser.NullConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nullConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullConstant([NotNull] ArrayPPParser.NullConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArrayPPParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] ArrayPPParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArrayPPParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] ArrayPPParser.BlockContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
