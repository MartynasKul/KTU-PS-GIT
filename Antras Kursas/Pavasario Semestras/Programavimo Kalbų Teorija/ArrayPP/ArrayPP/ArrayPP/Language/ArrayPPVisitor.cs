//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/HP/RiderProjects/ArrayPP/ArrayPP/ArrayPP/Language\ArrayPP.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ArrayPPParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface IArrayPPVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] ArrayPPParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] ArrayPPParser.LineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] ArrayPPParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBlock([NotNull] ArrayPPParser.IfBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfBlock([NotNull] ArrayPPParser.ElseIfBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] ArrayPPParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] ArrayPPParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] ArrayPPParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAssignment([NotNull] ArrayPPParser.ArrayAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayRemoval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayRemoval([NotNull] ArrayPPParser.ArrayRemovalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayInsert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayInsert([NotNull] ArrayPPParser.ArrayInsertContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLength([NotNull] ArrayPPParser.ArrayLengthContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayRandomiser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayRandomiser([NotNull] ArrayPPParser.ArrayRandomiserContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayFill"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayFill([NotNull] ArrayPPParser.ArrayFillContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayFilter([NotNull] ArrayPPParser.ArrayFilterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayUnique"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayUnique([NotNull] ArrayPPParser.ArrayUniqueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arraySlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraySlice([NotNull] ArrayPPParser.ArraySliceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] ArrayPPParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.forCycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCycle([NotNull] ArrayPPParser.ForCycleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.whileCycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileCycle([NotNull] ArrayPPParser.WhileCycleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] ArrayPPParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn([NotNull] ArrayPPParser.ReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.printToScreen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintToScreen([NotNull] ArrayPPParser.PrintToScreenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.readFromFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadFromFile([NotNull] ArrayPPParser.ReadFromFileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.substring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubstring([NotNull] ArrayPPParser.SubstringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.split"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSplit([NotNull] ArrayPPParser.SplitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arrayExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayExpression([NotNull] ArrayPPParser.ArrayExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpression([NotNull] ArrayPPParser.ConstantExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExpression([NotNull] ArrayPPParser.BoolExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] ArrayPPParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpression([NotNull] ArrayPPParser.ParenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lengthExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLengthExpression([NotNull] ArrayPPParser.LengthExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>compareExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareExpression([NotNull] ArrayPPParser.CompareExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>uniqueExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniqueExpression([NotNull] ArrayPPParser.UniqueExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpression([NotNull] ArrayPPParser.AddExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>splitExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSplitExpression([NotNull] ArrayPPParser.SplitExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] ArrayPPParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultExpression([NotNull] ArrayPPParser.MultExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>indexAccessExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexAccessExpression([NotNull] ArrayPPParser.IndexAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>readFromFileExprission</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadFromFileExprission([NotNull] ArrayPPParser.ReadFromFileExprissionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>substringExpression</c>
	/// labeled alternative in <see cref="ArrayPPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubstringExpression([NotNull] ArrayPPParser.SubstringExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] ArrayPPParser.MultOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] ArrayPPParser.AddOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareOp([NotNull] ArrayPPParser.CompareOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOp([NotNull] ArrayPPParser.BoolOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteral([NotNull] ArrayPPParser.ArrayLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] ArrayPPParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.indexAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexAccess([NotNull] ArrayPPParser.IndexAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveType([NotNull] ArrayPPParser.PrimitiveTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] ArrayPPParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>integerConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerConstant([NotNull] ArrayPPParser.IntegerConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>floatConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatConstant([NotNull] ArrayPPParser.FloatConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringConstant([NotNull] ArrayPPParser.StringConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolConstant([NotNull] ArrayPPParser.BoolConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>charConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharConstant([NotNull] ArrayPPParser.CharConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullConstant</c>
	/// labeled alternative in <see cref="ArrayPPParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullConstant([NotNull] ArrayPPParser.NullConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArrayPPParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] ArrayPPParser.BlockContext context);
}
